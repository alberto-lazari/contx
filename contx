#!/bin/sh
set -e

SCRIPT_DIR="$(dirname "$(realpath "$0")")"
export CONTX_LIB="$SCRIPT_DIR/lib.sh"
. "$CONTX_LIB"

: "${CONTX_CONFIG:=$HOME/.contxrc:$HOME/.contx/contxrc:${XDG_CONFIG_HOME:-$HOME/.config/contx}/contxrc}"
: "${CONTX_PATH:=$HOME/.contx/contexts:${XDG_CONFIG_HOME:-$HOME/.config/contx/contexts}}"
: "${CONTX_ENVRC:=envrc:../.contxenv:../.envrc:../.env}"
: "${CONTX_INITRC:=initrc:../.contxrc}"
export CONTX_CONFIG
export CONTX_PATH
export CONTX_ENVRC
export CONTX_INITRC

export CONTX
export CONTX_CONTEXT_DIR
export CONTX_ARGS

# Source contx config file
IFS=:
for rcfile in $CONTX_CONFIG; do
  [ ! -f "$rcfile" ] || . "$rcfile"
done
unset IFS

# Set the first argument as the context to run.
# Search it between named context first, then as a relative directory.
[ -n "$1" ] || erorr 'usage: contx (CONTEXT_NAME | CONTEXT_PATH) [ARGS...]'
context="$1"
shift

IFS=:
for path in $CONTX_PATH; do
  if [ -d "$path/$context" ] && has_contx_files "$path/$context"; then
    CONTX_CONTEXT_DIR="$path/$context"
    CONTX="$context"
    break
  fi
done
unset IFS

# If no named context was found, try interpreting the argument as a directory
[ -n "$CONTX_CONTEXT_DIR" ] ||
if [ -d "$context" ]; then
  CONTX_CONTEXT_DIR="$(realpath "$context")/.contx"
  CONTX_DIR="$context"
else
  # No context was found, either as a named context or a directory
  error "context '$context' is not defined"
fi

has_contx_files "$CONTX_CONTEXT_DIR" ||
  error "no context found in '${CONTX_CONTEXT_DIR/$HOME/~}'"

# Expose context name
: ${CONTX:=$(basename "$(realpath "$CONTX_CONTEXT_DIR/..")")}

# Source env file before context session start to allow setting sensible envs
IFS=:
for file in $CONTX_ENVRC; do
  [ ! -f "$CONTX_CONTEXT_DIR/$file" ] || . "$CONTX_CONTEXT_DIR/$file"
done
unset IFS

# Move to context directory, if specified in env file
[ -d "${CONTX_DIR-/}" ] || error "directory '$CONTX_DIR' does not exist"
cd "$CONTX_DIR"

shell_type="$(basename "$(realpath "$SHELL")")"
initrc="$SCRIPT_DIR/shell/$shell_type.initrc"

# Export additional arguments to the context
IFS=:
CONTX_ARGS="$@"
unset IFS

# Start context based on shell type
case "$shell_type" in
  bash) exec "$SHELL" --init-file "$initrc" ;;
  zsh)
    # Move initrc to a temporary ZDOTDIR for zsh to source it
    export ZDOTDIR="$(mktemp -d)"
    cp "$initrc" "$ZDOTDIR/.zshrc"
    exec "$SHELL"
    ;;
  *) error "'$shell_type' shell is not supported yet" ;;
esac
